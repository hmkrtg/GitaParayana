<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Gita — One Verse</title>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&family=Noto+Serif+Devanagari:wght@400;600&display=swap" rel="stylesheet">
<style>
  :root{
    --bg: #f6f7fb; --fg:#0f1222; --muted:#5c627a; --card:#ffffff; --border:#e6e8f0; --accent:#6b74ff;
    --btn:#f2f3f9; --btn-border:#d7daea; --shadow: 0 4px 12px rgba(20,22,38,.08);
  }
  @media (prefers-color-scheme: dark){
    :root{ --bg:#0c0f16; --fg:#e8eaf5; --muted:#a1a7c4; --card:#131826; --border:#21283a; --accent:#8ea2ff; --btn:#171c2c; --btn-border:#242b3f; --shadow: 0 4px 12px rgba(0,0,0,.4); }
  }
  *{ box-sizing:border-box; -webkit-tap-highlight-color:transparent; }
  body { font-family: Inter, system-ui, sans-serif; background:var(--bg); color:var(--fg); margin:0; }
  .wrap{ max-width: 880px; margin: 20px auto; padding: 0 12px; }
  header{ display:flex; align-items:center; justify-content:space-between; gap:.5rem; margin-bottom: 12px; }
  .title{ font-size: 1.1rem; font-weight:600; letter-spacing:.2px; }
  .bar{ display:flex; flex-wrap:wrap; gap:.4rem; align-items:center; padding: 8px; background: var(--card); border:1px solid var(--border); border-radius:12px; box-shadow: var(--shadow); position: sticky; top: 0; z-index: 5; }
  label{ display:flex; align-items:center; gap:.3rem; color:var(--muted); font-size:.9rem; }
  input, select{ padding:.45rem .6rem; border-radius:8px; border:1px solid var(--btn-border); background:var(--btn); color:var(--fg); font-size:.9rem; }
  input[type=number]{ width:4rem }
  button{ padding:.5rem .8rem; border-radius:8px; border:1px solid var(--btn-border); background:var(--btn); color:var(--fg); cursor:pointer; font-size:.9rem; }
  .accent{ background: var(--accent); color:#fff; border:none; }
  .status{ color:var(--muted); font-size:.85rem; flex:1 1 100%; }
  .card{ background:var(--card); border:1px solid var(--border); border-radius:12px; padding: 16px; box-shadow: var(--shadow); margin-top:12px; }
  h2{ margin:0 0 8px; font-size:1rem; font-weight:600; color:var(--muted) }
  .section{ margin-top:10px; }
  .skt{ font-family: "Noto Serif Devanagari", serif; font-size: 1.3rem; line-height: 1.5; white-space: pre-wrap; }
  .trl{ font-style: italic; white-space: pre-wrap; opacity:.92; font-size:.95rem; }
  .meaning, .context{ font-size:1rem; line-height:1.5; }
  .divider{ height:1px; background:var(--border); margin:12px 0; border-radius:1px; }
</style>
</head>
<body>
  <div class="wrap">
    <header>
      <div class="title">Bhagavad Gita — One Verse</div>
    </header>

    <div class="bar">
      <label>Ch <input type="number" id="inCh" min="1" value="1"></label>
      <label>Vs <input type="number" id="inVs" min="1" value="1"></label>
      <button id="go" class="accent">Go</button>
      <button id="prev">◀</button>
      <button id="next">▶</button>
      <label>Trans
        <select id="translator">
          <option value="auto" selected>Auto</option>
          <option value="purohit">Purohit</option>
          <option value="siva">Sivananda</option>
          <option value="tej">Tejomayananda</option>
          <option value="gambir">Gambhirananda</option>
          <option value="chinmay">Chinmayananda</option>
          <option value="prabhupada">Prabhupada</option>
        </select>
      </label>
      <span class="status" id="status">API: vedicscriptures.github.io</span>
    </div>

    <div class="card">
      <h2 id="title">Chapter 1, Verse 1</h2>
      <div class="section">
        <div class="skt" id="slok">Loading…</div>
      </div>
      <div class="divider"></div>
      <div class="section">
        <div class="trl" id="trl"></div>
      </div>
      <div class="divider"></div>
      <div class="section meaning" id="meaning"></div>
      <div class="divider"></div>
      <div class="section context" id="context"></div>
    </div>
  </div>

<script>
const API_BASE = 'https://vedicscriptures.github.io';
let ch = 1, vs = 1;
let versesInChapter = {};

async function fetchJson(u){
  const res = await fetch(u);
  if (!res.ok) throw new Error(`HTTP ${res.status}`);
  return res.json();
}

async function loadVerseCount(){
  const chapters = await fetchJson(`${API_BASE}/chapters`);
  chapters.forEach(c => versesInChapter[c.chapter_number] = c.verses_count);
}

// Fetch short context via Netlify function backed by Google Gemini API (server-side key)
async function getContextFromGoogle(verseText, meaningText){
  try {
    const cacheKey = `ctx:${ch}.${vs}`;
    const cached = sessionStorage.getItem(cacheKey);
    if (cached) return cached;

    const res = await fetch('/.netlify/functions/gitaContext', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chapter: ch, verse: vs,
        slok: verseText,
        transliteration: document.getElementById('trl').textContent,
        meaning: meaningText
      })
    });
    const data = await res.json();
    const text = (data && data.context) ? String(data.context) : '';
    if (text) sessionStorage.setItem(cacheKey, text);
    return text;
  } catch(e) {
    return '';
  }
}

async function load(){
  document.getElementById('title').textContent = `Chapter ${ch}, Verse ${vs}`;
  document.getElementById('slok').textContent = 'Loading…';
  document.getElementById('trl').textContent = '';
  document.getElementById('meaning').textContent = '';
  document.getElementById('context').textContent = '';
  try {
    const data = await fetchJson(`${API_BASE}/slok/${ch}/${vs}`);
    document.getElementById('slok').textContent = data.slok || '—';
    document.getElementById('trl').textContent = data.transliteration || '';
    const explicit = document.getElementById('translator').value;
    const prefer = explicit === 'auto' ? ['purohit','siva','tej','gambir','chinmay','prabhupada'] : [explicit];
    let meaning = 'Meaning unavailable for this verse.';
    for (const key of prefer) {
      if (data[key] && (data[key].et || data[key].hc || data[key].en)) {
        meaning = data[key].et || data[key].en || data[key].hc;
        break;
      }
    }
    document.getElementById('meaning').textContent = meaning;
    // AI Context (if function deployed)
    document.getElementById('context').textContent = 'Loading context…';
    const contextText = await getContextFromGoogle(data.slok, meaning);
    document.getElementById('context').textContent = contextText || '';
  } catch (e) {
    document.getElementById('slok').textContent = 'Failed to load verse.';
    document.getElementById('context').textContent = '';
  }
}

function goTo(){
  const c = parseInt(document.getElementById('inCh').value, 10) || 1;
  const v = parseInt(document.getElementById('inVs').value, 10) || 1;
  ch = Math.max(1, Math.min(18, c));
  vs = Math.max(1, Math.min(versesInChapter[ch] || 50, v));
  load();
}

document.getElementById('go').onclick = goTo;
document.getElementById('prev').onclick = () => {
  if (vs > 1) vs -= 1; else if (ch > 1) { ch -= 1; vs = versesInChapter[ch]; document.getElementById('inCh').value = ch; }
  document.getElementById('inVs').value = vs; load();
};
document.getElementById('next').onclick = () => {
  if (vs < versesInChapter[ch]) vs += 1; else if (ch < 18) { ch += 1; vs = 1; document.getElementById('inCh').value = ch; }
  document.getElementById('inVs').value = vs; load();
};

document.getElementById('translator').onchange = load;

window.addEventListener('keydown', (e) => {
  if (e.key === 'Enter') goTo();
  if (e.key === 'ArrowLeft') document.getElementById('prev').click();
  if (e.key === 'ArrowRight') document.getElementById('next').click();
});

loadVerseCount().then(load);
</script>
</body>
</html>
